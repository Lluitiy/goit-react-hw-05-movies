{"version":3,"file":"static/js/112.6586ace5.chunk.js","mappings":"0QAEaA,EAAcC,EAAAA,EAAAA,MAAH,+T,SCAXC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACC,SAACH,EAAD,CAAaI,KAAK,cAAcD,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOC,MAAtB,GAE5C,E,kBCJYC,EAAOP,EAAAA,EAAAA,KAAH,6CAIJQ,EAAUR,EAAAA,EAAAA,QAAH,8CAGPS,EAAYT,EAAAA,EAAAA,IAAH,qFAKTU,EAAOV,EAAAA,EAAAA,KAAH,mHAMJW,EAAQX,EAAAA,EAAAA,MAAH,sBAELY,EAASZ,EAAAA,EAAAA,OAAH,2qBA2BNa,GAAab,EAAAA,EAAAA,GAAOc,EAAAA,IAAPd,CAAH,iKAUVe,EAAYf,EAAAA,EAAAA,GAAH,qJASTgB,EAAYhB,EAAAA,EAAAA,GAAH,8EAKTiB,EAAWjB,EAAAA,EAAAA,IAAH,mOCvDRkB,EAAS,WACrB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAWXC,EAAQN,EAAaO,IAAI,SAc/B,OAZAC,EAAAA,EAAAA,YAAU,WACJF,IAILH,GAAW,IACXM,EAAAA,EAAAA,IAAcH,GACZI,MAAK,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,QAAhB,IACNC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQd,GAAW,IACrB,GAAE,CAACG,KAGH,UAACxB,EAAD,YACC,UAACC,EAAD,WACEmB,IAAW,SAACgB,EAAA,EAAD,KACZ,SAAClC,EAAD,WACC,UAACC,EAAD,CAAMkC,SAzBe,SAAAxC,GACxBA,EAAEyC,iBACFnB,EAAgBN,GAChBhB,EAAEC,OAAOyC,OACT,EAqBG,WACC,SAACnC,EAAD,CAAOoC,QAAQ,cAAf,UACC,SAAC9C,EAAD,CAAWC,SA/BS,SAAA6B,GACzBV,EAAyB,KAAVU,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC3C,OA+BI,SAACnB,EAAD,CAAQoC,KAAK,SAAb,UACC,SAACnC,EAAD,eAMJ,SAACL,EAAD,WACC,SAACC,EAAD,WACC,SAACM,EAAD,UACQ,OAANO,QAAM,IAANA,GAAAA,EAAQ2B,OACR3B,EAAO4B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACxBC,EAAS,UACTC,EAAAA,IADS,OACEH,GAEjB,OACC,SAACpC,EAAD,WACC,SAAC,KAAD,CAAMwC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAM7B,GAA1C,UACC,SAACZ,EAAD,CAAU0C,IAAKL,EAAQM,IAAKP,OAFdF,EAMjB,KAED,0BACC,mEAML,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACnB,EAAA,EAAD,IAApB,UACC,SAAC,KAAD,QAIH,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/pages/Movies/Movies.styled.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledInput = styled.input`\n\twidth: 600px;\n\tdisplay: block;\n\tpadding: 4px;\n\theight: 28px;\n\tborder-right: transparent;\n\tborder-bottom-left-radius: 4px;\n\tborder-top-left-radius: 4px;\n\tborder: 1px solid rgb(255, 165, 0);\n\t:hover,\n\t:focus {\n\t\toutline: none;\n\t\tborder: 1px solid rgb(255, 165, 0);\n\t}\n`;\n","import { StyledInput } from './SearchBox.styled';\n\nexport const SearchBox = ({ onChange }) => {\n\treturn (\n\t\t<StyledInput name=\"searchQuery\" onChange={e => onChange(e.target.value)} />\n\t);\n};\n","import styled from '@emotion/styled';\nimport { MdOutlineLocationSearching } from 'react-icons/md';\nexport const Main = styled.main`\n\tmargin: 0px auto;\n`;\n\nexport const Section = styled.section`\n\tpadding: 40px 0px;\n`;\nexport const Container = styled.div`\n\twidth: 1200px;\n\tmargin: 0px auto;\n\tpadding: 0px 15px;\n`;\nexport const Form = styled.form`\n\tmargin: 0px auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\nexport const Label = styled.label``;\n\nexport const Button = styled.button`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 18px;\n\twidth: 40px;\n\theight: 40px;\n\tgap: 16px;\n\tborder-radius: 4px;\n\tborder-bottom-left-radius: 0px;\n\tborder-top-left-radius: 0px;\n\ttext-decoration: none;\n\tborder: none;\n\n\tcolor: rgb(0, 0, 0);\n\tbackground-color: rgb(255, 165, 0);\n\n\ttransition: 250ms color ease-in-out, 250ms background-color ease-in-out,\n\t\t250ms border ease-in-out, 250ms transform ease-in-out;\n\t:hover {\n\t\tcolor: rgb(255, 165, 0);\n\t\tbackground-color: rgb(0, 0, 0);\n\n\t\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n\t\t\trgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n\t}\n`;\nexport const SearchIcon = styled(MdOutlineLocationSearching)`\n\twidth: 100%;\n\theight: 100%;\n\tfill: rgb(0, 0, 0);\n\ttransition: 250ms fill ease-in;\n\t:hover {\n\t\tfill: rgb(255, 165, 0);\n\t}\n`;\n\nexport const MovieList = styled.ul`\n\tlist-style: none;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tgap: 32px;\n`;\n\nexport const MovieItem = styled.li`\n\tdisplay: block;\n\twidth: 300px;\n\theight: 300px;\n`;\nexport const MovieImg = styled.img`\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\n\ttransition: 250ms transform ease-in-out, 250ms filter ease-in-out;\n\n\t:hover {\n\t\ttransform: scale(1.05);\n\t\tfilter: brightness(115%);\n\t}\n`;\n","import { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { movieApiQuery, IMG_PATH } from 'components/Api/Api';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport {\n\tMain,\n\tSection,\n\tContainer,\n\tForm,\n\tLabel,\n\tButton,\n\tSearchIcon,\n\tMovieList,\n\tMovieItem,\n\tMovieImg,\n} from './Movies.styled';\n\nexport const Movies = () => {\n\tconst [searchQuery, setSearchQuery] = useState(null);\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst [spinner, setSpinner] = useState(false);\n\tconst location = useLocation();\n\tconst handleSearchQuery = query => {\n\t\tsetSearchQuery(query !== '' ? { query } : {});\n\t};\n\n\tconst handleFormSubmit = e => {\n\t\te.preventDefault();\n\t\tsetSearchParams(searchQuery);\n\t\te.target.reset();\n\t};\n\n\tconst query = searchParams.get('query');\n\n\tuseEffect(() => {\n\t\tif (!query) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSpinner(true);\n\t\tmovieApiQuery(query)\n\t\t\t.then(r => setMovies(r.results))\n\t\t\t.catch(error => console.log(error))\n\t\t\t.finally(setSpinner(false));\n\t}, [query]);\n\n\treturn (\n\t\t<Main>\n\t\t\t<Section>\n\t\t\t\t{spinner && <Spinner />}\n\t\t\t\t<Container>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Label htmlFor=\"searchQuery\">\n\t\t\t\t\t\t\t<SearchBox onChange={handleSearchQuery} />\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Container>\n\t\t\t</Section>\n\n\t\t\t<Section>\n\t\t\t\t<Container>\n\t\t\t\t\t<MovieList>\n\t\t\t\t\t\t{movies?.length ? (\n\t\t\t\t\t\t\tmovies.map(({ id, poster_path, title }) => {\n\t\t\t\t\t\t\t\tconst ImgSrc = { poster_path }\n\t\t\t\t\t\t\t\t\t? `${IMG_PATH}${poster_path}`\n\t\t\t\t\t\t\t\t\t: `https://via.placeholder.com/395x574`;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MovieItem key={id}>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/movies/${id}`} state={{ from: location }}>\n\t\t\t\t\t\t\t\t\t\t\t<MovieImg src={ImgSrc} alt={title} />\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</MovieItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2>Please enter the search query</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MovieList>\n\t\t\t\t</Container>\n\t\t\t</Section>\n\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t<Outlet />\n\t\t\t</Suspense>\n\t\t</Main>\n\t);\n};\n"],"names":["StyledInput","styled","SearchBox","onChange","name","e","target","value","Main","Section","Container","Form","Label","Button","SearchIcon","MdOutlineLocationSearching","MovieList","MovieItem","MovieImg","Movies","useState","searchQuery","setSearchQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","spinner","setSpinner","location","useLocation","query","get","useEffect","movieApiQuery","then","r","results","catch","error","console","log","finally","Spinner","onSubmit","preventDefault","reset","htmlFor","type","length","map","id","poster_path","title","ImgSrc","IMG_PATH","to","state","from","src","alt","Suspense","fallback"],"sourceRoot":""}